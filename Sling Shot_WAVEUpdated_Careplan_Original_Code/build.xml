<project name="BGRegression" default="run.test.suite" basedir=".">

    <property name="build.env" value="dev"/>
    <echo message="ENV is ${build.env}"/>

    <!-- build.properties is used by TestNG to indicate which suite to run -->
    <property file="build.properties" />
    <property file="src/resources/common/test.${build.env}.properties" />

	<property name="build.root" value="${basedir}"/>
    <property name="test.src.dir" value="src"/>
    <property name="test.build.dir" value="bin"/>
    <property name="test.resource.dir" location="src/resources/common"/>
    <property name="testng.report.dir" value="${test.report.dir}"/>

    <path id="classpath">
        <fileset dir="lib">
            <include name="**/*.jar"/>
        </fileset>

    </path>

    <path id="runpath">
        <path refid="classpath"/>
        <path location="config"/>
        <pathelement location="${test.build.dir}"/>
    </path>

    <taskdef resource="testngtasks" classpathref="classpath"/>

    <target name="clean">
        <delete dir="${test.build.dir}"/>
        <mkdir dir="${test.build.dir}"/>
    </target>

    <target name="compile-tests" depends="clean">
        <javac classpathref="classpath"
               srcdir="${test.src.dir}"
               destdir="${test.build.dir}"
               debug="true"/>
        <antcall target="copy.resources"/>
    </target>

    <target name="copy.resources">
        <echo message="ENV is ${build.env}"/>
		<echo message="common.bg-url is ${common.newblue-url}" />
        <copy todir="${test.build.dir}/resources">
            <fileset dir="${test.src.dir}/resources"/>
        </copy>
        <copy file="${test.resource.dir}/test.${build.env}.properties" tofile="${test.build.dir}/resources/common/common.properties" overwrite="true"/>

		<echo message="common.bg-url is ${common.newblue-url}" />

    </target>

    <target name="run.test.suite" depends="compile-tests">
        <antcall target="run-groups"/>
    </target>

    <target name="run-groups">
        <delete dir="${testng.report.dir}" />
        <testng
                classpathref="runpath"
                outputdir="${testng.report.dir}"
                haltonfailure="no"
                failureproperty="tests.failed"
                listeners="bg.framework.common.functional.CustomTestListener">
            <xmlfileset file="${test.suite.xml}"/>
         </testng>
        <!-- <antcall target="generate.report"/> -->
        <fail if="tests.failed"/>
    </target>

    <target name="generate.report">
        <delete dir="./${testng.report.dir}/html" />
        <mkdir dir="./${testng.report.dir}/html" />
        <xslt in="./${testng.report.dir}/testng-results.xml" style="./testng-results.xsl" out="./${testng.report.dir}/html/index.html" processor="SaxonLiaison">
            <param name="testNgXslt.outputDir" expression="./../../${testng.report.dir}/html" />
            <param name="testNgXslt.sortTestCaseLinks" expression="true" />
            <param name="testNgXslt.testDetailsFilter" expression="FAIL,SKIP,PASS,BY_CLASS" />
            <param name="testNgXslt.showRuntimeTotals" expression="true" />
            <classpath refid="classpath" />
        </xslt>
    </target>

</project>